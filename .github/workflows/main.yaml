name: workflow

on:
 push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
 id-token: write
 contents: read

jobs:
 integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linking repository"

      - name: Run unit tests
        run: echo "Running unit tests"

 build-and-push-acr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build, tag, and push image to Azure Container Registry
        run: |
          docker build -t ${{ secrets.ACR_REGISTRY }}/your-image-name:latest .
          docker push ${{ secrets.ACR_REGISTRY }}/your-image-name:latest

 Continuous-Deployment:
    needs: build-and-push-acr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Pull latest images
        run: |
          docker pull ${{ secrets.ACR_REGISTRY }}/your-image-name:latest

      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 80:80 --name=Dock_QnA ${{ secrets.ACR_REGISTRY }}/your-image-name:latest

      - name: Clean previous images and containers
        run: |
          docker system prune -f
